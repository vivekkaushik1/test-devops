def artifactname = "rome-rp1-app.jar"
def repoName = "rome-rp1-app-repo"
def pipelineName = "balu_scripted_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "rome-rp1-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "rome-rp1-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   
  //				Build				 
  stages {
       stage('Connect_to_Nexus') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       stage('Init_Service') {
           steps {
              
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
  
        stage('GetPullRequest') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
        stage('MergePullRequest') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       
        stage('Build') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       
        stage('UnitTest') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
        stage('ITTest') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       
       stage('Deploy') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       } 
       
          stage('Download_Artifacts') {
                 steps {
                    
                    echo 'Deploying the change....'
                    snDevOpsChange()
                    
                 snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           		   snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
                    
                    
                 }
      }
    


 }
 
}

def sonarSummaries() {

   //withSonarQubeEnv('Sonar_Cloud') {
       //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
   
	//}
	
    withSonarQubeEnv('sonarQube_local') {
       	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		// sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
	}
	
} // end of def sonarsummaries
